name: createTag
on:
  pull_request:
    branches:
      - main
      - engineering
    types: 
      - closed

env:
  branch_merge: ${{ github.ref_name }}
  branch_source: ${{ github.head_ref }}
  
jobs:
  define-variables:
    if: github.event.pull_request.merged == true  
    runs-on: ubuntu-latest
    steps:
      - name: get-buildVersion
        run: |
          echo "buildVersion${{ env.branch_source }}| cut -d- -f3" >> $GITHUB_ENV
      - name: set-engineering-build
        if: env.branch_merge  == 'engineering'
        run: |
          echo "matlabTag=EngBuild${{ env.buildVersion }}" >> $GITHUB_ENV
      - name: set-engineering-release
        if: env.branch_merge  == 'engineering'
        run: |
          echo "releaseType=Engineering" >> $GITHUB_ENV
      - name: set-main-build
        if: env.branch_merge  == 'main'
        run: |
          echo "matlabTag=Build${{ env.buildVersion }}" >> $GITHUB_ENV
      - name: set-main-release
        if: env.branch_merge  == 'main'
        run: |
          echo "releaseType=Commercial" >> $GITHUB_ENV
#       - id: get-buildVersion
#         run: |
#           id=$(echo ${{env.matlabTag}} | cut -d- -f3)
#           echo "::set-output name=id::$id"        
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.matlabTag }}',
              sha: context.sha
              })
      - name: Run flopatch-matlab repo workflows
        run: |
          echo "Run workflow"
          sleep 10s
#       - uses: convictional/trigger-workflow-and-wait@v1.6.1
#         with:
#           owner: FlosonicsMedical # question: who is owner of matlab repo
#           repo: flopatch-matlab
#           github_token: ${{ secrets.G_ACCESS_TOKEN }} # TODDO create access token
#           workflow_file_name: pullRequest.yml
#           client_payload: '{"matlabtag": "${{ env.matlabTag }}","releaseType":"${{env.releaseType}}, "buildVersion": "${{ env.buildVersion}}"}'

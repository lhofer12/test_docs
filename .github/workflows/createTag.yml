name: createTag
on:
  workflow_dispatch:
    inputs:
      ref_name: 
      head_ref: 
#   pull_request:
#     branches:
#       - main
#       - engineering
#     types: 
#       - closed

env:
  branch_merge: ${{ inputs.ref_name }}
  branch_source: ${{ inputs.head_ref }}
  
jobs:
  define-variables:
#     if: github.event.pull_request.merged == true  
    runs-on: ubuntu-latest
    steps:
      - name: get-buildVersion
        run: |
          id=$( echo ${{ env.branch_source}} | cut -d- -f3)
          echo "::set-output name=id::$id"
      - name: log-failure1
        if: failure()
        run: echo "${{env.branch_source}} is not in the correct format, please check merge branch format is xxx-build-###"
      - name: check-buildVersion
        if: steps.get-buildVersion.outputs.id > 0
        run: echo "${{steps.get-buildVersion.outputs.id}}"
      - run: echo "${{join(steps.get-buildVersion.outputs.*, '\n')}}"
#       - name: log-failure
#         if: steps.check-buildVersion.outputs.
#         run: echo "${{steps.get-buildVersion.outputs.id}} is not a number, please check merge branch format is xxx-build-###"
#       - name: set-engineering-build
#         if: env.branch_merge  == 'engineering'
#         run: |
#           echo "matlabTag=EngBuild${{steps.get-buildVersion.outputs.id}}" >> $GITHUB_ENV
#       - name: set-engineering-release
#         if: env.branch_merge  == 'engineering'
#         run: |
#           echo "releaseType=Engineering" >> $GITHUB_ENV
      - name: set-main-build
        if: env.branch_merge  == 'main'
        run: |
          echo "matlabTag=Build${{steps.get-buildVersion.outputs.id}}" >> $GITHUB_ENV
#       - name: check-status
        
#       - name: set-main-release
#         if: env.branch_merge  == 'main'
#         run: |
#           echo "releaseType=Commercial" >> $GITHUB_ENV
#       - name: run-env
#         run: env
#       - name: Run flopatch-matlab repo workflows
#         run: |
#           echo "Run workflow"
#           sleep 10s
#       - uses: convictional/trigger-workflow-and-wait@v1.6.1
#         with:
#           owner: lhofer12
#           repo: test_docs_target
#           github_token: ${{ secrets.G_ACCESS_TOKEN }}
#           workflow_file_name: PullRequest.yml        
#           client_payload: '{"matlabtag":"${{env.matlabTag}}","releaseType":"${{env.releaseType}}", "buildVersion": "${{steps.get-buildVersion.outputs.id}}"}'
#       - name: Create tag
#         uses: actions/github-script@v5
#         with:
#           script: |
#             github.rest.git.createRef({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               ref: 'refs/tags/${{env.matlabTag}}',
#               sha: context.sha
#               })
